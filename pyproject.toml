[build-system]
requires = [
    "setuptools",
    "wheel",
    "numpy",
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
line_length = 88

[tool.tox]
legacy_tox_ini = """
[tox]
description = list of environments againts tox runs the tests
envlist =
    clean,
    check,
    docs,
    py38,
    py39,
    py310,
    pypy,
    pypy3

[testenv]
basepython =
    pypy: {env:PYTHON:pypy}
    pypy3: {env:PYTHON:pypy3}
    py38: {env:PYTHON:python3.8}
    py39: {env:PYTHON:python3.9}
    {py310,docs}: {env:PYTHON:python3.10}
    {clean,check,reformat}: {env:PYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps =
    pytest-cov
    ipywidgets
skip_install = false
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv src/einsteinpy/tests}


[testenv:check]
description = this environments checks for flake8, black, isort and einsteinpy code style
deps =
	black
	docutils
	isort
	flake8
	mypy
	pygments
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    flake8 src setup.py
    isort --check-only --diff --project einsteinpy --section-default THIRDPARTY src setup.py
    black --check src setup.py
    mypy --ignore-missing-imports --check-untyped-defs --no-strict-optional src


[testenv:reformat]
description = reformats the code using black and isort
deps =
	black
	isort
skip_install = true
commands =
    isort --project einsteinpy --section-default THIRDPARTY src setup.py
    black src setup.py


[testenv:docs]
description = invoke sphinx-build to build the HTML docs
extras =  docs
whitelist_externals = sphinx-build
commands = sphinx-build -d "{toxworkdir}/docs_doctree" docs/source "{toxworkdir}/docs_out" --color -W -bhtml

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
"""
