version: 2
jobs:
  quality:
    docker:
      - image: cimg/python:3.9
    parallelism: 4
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip setuptools wheel --quiet
            pip install black isort mypy --quiet
      - run:
          name: Check Code Style
          command: |
            . venv/bin/activate
            isort --version
            isort -c setup.py src/ -p einsteinpy --section-default THIRDPARTY  # This avoids installing einsteinpy
            black --version
            black src/ setup.py --check
      - run:
          name: check MyPy
          command: |
            . venv/bin/activate
            mypy --ignore-missing-imports --check-untyped-defs --no-strict-optional src/
  test_py39: &test-template
    docker:
      - image: cimg/python:3.9

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip setuptools wheel --quiet
            pip install numpy --quiet
            pip install . --quiet
            pip install .[dev] --quiet
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            MPLBACKEND=Agg pytest -n 8 -vv  # Test against installed code (Can use --doctest-modules)
  test_py310:
    <<: *test-template
    docker:
      - image: cimg/python:3.10
  test_py311:
    <<: *test-template
    docker:
      - image: cimg/python:3.11

  coverage:
    docker:
      - image: cimg/python:3.9

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install numpy --quiet
            pip install --editable .[dev] --quiet
      - run:
          name: run coverage
          command: |
            . venv/bin/activate
            MPLBACKEND=Agg NUMBA_DISABLE_JIT=1 pytest --cov  # Test against sources
      - run:
          name: publish coverage
          command: |
            . venv/bin/activate
            pip install codecov --quiet
            codecov
  docs:
    docker:
      - image: cimg/python:3.9

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            sudo apt update && sudo apt install --no-install-recommends pandoc texlive texlive-latex-extra texlive-fonts-recommended dvipng graphviz
            python3 -m venv venv
            . venv/bin/activate
            pip install .[dev] --quiet
            pip install alabaster
      - run:
          name: build docs
          command: |
            . venv/bin/activate
            sphinx-build -vW -b html docs/source docs-html
      - store_artifacts:
          path: docs-html
          destination: docs-html

workflows:
  version: 2
  build_and_test:
    jobs:
      - quality
      - test_py39:
          requires:
            - quality
      - test_py310:
          requires:
            - quality
      - test_py311:
          requires:
            - quality
      - coverage:
          requires:
            - quality
      - docs:
          requires:
            - test_py39
            - test_py310
            - test_py311
